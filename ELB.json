{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ipv4PublicIPAddressName": {
      "type": "string"
    },
    "elbName": {
      "type": "string"
    },
    "frontendIPConfigurationName": {
      "type": "string"
    },
    "backendAddressPoolName": {
      "type": "string"
    },
    "lbrules": {
      "type": "array"
    },
    "lbprobe": {
      "type": "array"
    }
  },
  "variables": {
 
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('ipv4PublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('ipv4PublicIPAddressName')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-01",
      "name": "[parameters('elbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('ipv4PublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[parameters('frontendIPConfigurationName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('ipv4PublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('backendAddressPoolName')]"
          }
        ],

 "copy": [

          {

            "name": "probes",

            "count": "[length(parameters('lbprobe'))]",

            "input": {

              "name": "[parameters('lbprobe')[copyIndex('probes')].name]",

              "properties": {

                "protocol": "[parameters('lbprobe')[copyIndex('probes')].properties.protocol]",

                "port": "[parameters('lbprobe')[copyIndex('probes')].properties.port]",

                "intervalInSeconds": "[parameters('lbprobe')[copyIndex('probes')].properties.intervalInSeconds]",

                "numberOfProbes": "[parameters('lbprobe')[copyIndex('probes')].properties.numberOfProbes]"


              }

            }

          },

          {

            "name": "loadBalancingRules",

            "count": "[length(parameters('lbRules'))]",

            "input": {

              "name": "[parameters('lbRules')[copyIndex('loadBalancingRules')].name]",

              "properties": {

                "frontendIPConfiguration": {

                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('elbName')), '/frontendIpConfigurations/',parameters('lbRules')[copyIndex('loadBalancingRules')].properties.frontendIPConfiguration.id)]"

                },

                "backendAddressPool": {

                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('elbName')), '/backendAddressPools/',parameters('lbRules')[copyIndex('loadBalancingRules')].properties.backendAddressPool.id)]"

                },

                "probe": {

                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('elbName')), '/probes/',parameters('lbRules')[copyIndex('loadBalancingRules')].properties.probe.id)]"

                },

                "protocol": "[parameters('lbRules')[copyIndex('loadBalancingRules')].properties.protocol]",

                "frontendPort": "[parameters('lbRules')[copyIndex('loadBalancingRules')].properties.frontendPort]",

                "backendPort": "[parameters('lbRules')[copyIndex('loadBalancingRules')].properties.backendPort]",

                "idleTimeoutInMinutes": "[parameters('lbRules')[copyIndex('loadBalancingRules')].properties.idleTimeoutInMinutes]"

              }

            }

          }

        ]

      }

    }

  ],

  "outputs": {

  
    }

  }